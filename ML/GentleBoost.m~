function [gentleBoostModel,y_pred_gentle,gentleboost_rmse, gentle_accuracy] = GentleBoost(cv, X, y,k_fold, gentleboost_rmse)
%GENTLEBOOST Summary of this function goes here
%   Detailed explanation goes here
 numSamples = size(X, 1);
    randIndices = randperm(numSamples);  % Generate a random permutation of indices
    X = X(randIndices, :);               % Shuffle X
    y = y(randIndices); 
    X_train = X(training(cv), :);
    X_test = X(test(cv), :);
    y_train = y(training(cv), :);
    y_test = y(test(cv), :);

    % Define the number of weak learners
numWeakLearners = 100;

% Create GentleBoost ensemble model
gentleBoostModel = fitensemble(X_train, y_train, 'GentleBoost', numWeakLearners, 'Tree');

% Predict using GentleBoost model
y_pred_gentle = predict(gentleBoostModel, X_test);

% Evaluate performance (Mean Squared Error for regression)
    mse = mean((y_test - y_pred_gentle).^2);
    disp(['GentleBoost Mean Squared Error: ', num2str(mse)]);
    gentleboost_rmse = sqrt(mean((y_pred_gentle - y_test).^2));

    confMat = confusionmat(y_test, y_pred_gentle);
    gentle_accuracy = sum(diag(confMat)) / sum(confMat(:)) * 100;
    disp(['Adaboost Accuracy: ', num2str(gentle_accuracy), '%']);
    Write2File("Accuracy", "GentleBoostResults.txt", [num2str(gentle_accuracy), '%']);
    Write2File("Mean Squared Error:", "GentleBoostResults.txt", num2str(gentleboost_rmse));
end

