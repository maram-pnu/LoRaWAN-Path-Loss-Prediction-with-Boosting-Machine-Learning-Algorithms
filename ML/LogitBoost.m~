function [gentleBoostModel,y_pred_gentle,gentleboost_rmse, gentle_accuracy] = LogitBoost(cv, X, y,k_fold, gentleboost_rmse)
%LOGITBOOST Summary of this function goes here
%   Detailed explanation goes here
 numSamples = size(X, 1);
    randIndices = randperm(numSamples);  % Generate a random permutation of indices
    X = X(randIndices, :);               % Shuffle X
    y = y(randIndices); 
    X_train = X(training(cv), :);
    X_test = X(test(cv), :);
    y_train = y(training(cv), :);
    y_test = y(test(cv), :);

    % Define the number of weak learners
numWeakLearners = 100;

% Create GentleBoost ensemble model
gentleBoostModel = fitensemble(X_train, y_train, 'LogitBoost', numWeakLearners, 'Tree');

% Predict using GentleBoost model
y_pred_gentle = predict(gentleBoostModel, X_test);

% Evaluate performance (Mean Squared Error for regression)
    mse = mean((y_test - y_pred_gentle).^2);
    disp(['Mean Squared Error: ', num2str(mse)]);
    gentleboost_rmse = sqrt(mean((y_pred_gentle - y_test).^2));
% % Calculate and display performance metrics
% gentle_accuracy = sum(y_pred_gentle == y) / length(y) * 100;
% fprintf('GentleBoost Accuracy: %.2f%%\n', gentle_accuracy);
%     % Train AdaBoost model (since now it's binary classification)
%     adaboostModel = fitcensemble(X_train, y_train, 'Method', 'AdaBoostM1');
% 
%     % % Predict on test data
%     y_pred_adaboost = predict(adaboostModel, X_test);
%     % 
%     % % Evaluate performance (Mean Squared Error for regression)
%     mse = mean((y_test - y_pred_adaboost).^2);
%     disp(['Mean Squared Error: ', num2str(mse)]);
%     adaboost_rmse = sqrt(mean((y_pred_adaboost - y_test).^2));
%     % Train AdaBoost
% %     adaboostModel = fitensemble(X_train, y_train, 'AdaBoostM1', 100, 'Tree', 'Type', 'regression');
% %     y_pred_adaboost = predict(adaboostModel, X_test);
% %     adaboost_rmse(i) = sqrt(mean((y_pred_adaboost - y_test).^2));
    confMat = confusionmat(y_test, y_pred_gentle);
    logit_accuracy = sum(diag(confMat)) / sum(confMat(:)) * 100;
%     disp(['Adaboost Accuracy: ', num2str(accuracy), '%']);outputArg1 = inputArg1;

end

